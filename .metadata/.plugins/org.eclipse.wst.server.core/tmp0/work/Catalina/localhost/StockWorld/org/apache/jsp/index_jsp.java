/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.77
 * Generated at: 2017-10-08 19:16:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.apache.jasper.tagplugins.jstl.core.ForEach;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<title>Portfolio</title>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js\"></script>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body ng-app=\"myApp\">\r\n");
      out.write("\r\n");
      out.write("<div ng-controller=\"myCtrl\">\r\n");
      out.write("<nav class=\"navbar navbar-inverse\">\r\n");
      out.write("  <div class=\"container-fluid\">\r\n");
      out.write("    <div class=\"navbar-header\">\r\n");
      out.write("      <a class=\"navbar-brand\" href=\"#\">StockWorld</a>\r\n");
      out.write("    </div>\r\n");
      out.write("    <ul class=\"nav navbar-nav\">\r\n");
      out.write("      <li><a href=\"#\" ng-click=\"getHome()\">Home</a></li>\r\n");
      out.write("    </ul>\r\n");
      out.write("    <ul class=\"nav navbar-nav\">\r\n");
      out.write("      <li><a href=\"#\" ng-click=\"getPortfolio()\">Portfolio</a></li>\r\n");
      out.write("    </ul>\r\n");
      out.write("  </div>\r\n");
      out.write("</nav>\r\n");
      out.write("  \r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<div ng-show=\"cClass == 1\">\r\n");
      out.write("\t\t\t<div class=\"input-group\">\r\n");
      out.write("    \t\t\t<span class=\"input-group-addon\">Symbol</span>\r\n");
      out.write("    \t\t\t<input ng-model=\"sym\" type=\"text\" class=\"form-control\" name=\"msg\" placeholder=\"Enter the Symbol you want to search..\">\r\n");
      out.write(" \t\t\t</div>\r\n");
      out.write(" \t\t\t</br>\r\n");
      out.write("  \t\t\t<p><button type=\"button\" class=\"btn btn-primary\" ng-click=\"searchSymbol()\">Search</button></p>\r\n");
      out.write("  \t\t\t<p>{{validationText1}}</p>\r\n");
      out.write("  \t\t\t<p><label>Company Name: {{name}}</label></p>\r\n");
      out.write("  \t\t\t<p><label>Stock Symbol: {{symbol}}</label></p>\r\n");
      out.write("  \t\t\t<p><label>Last Traded Price: {{price}}</label></p>\r\n");
      out.write("  \t\t\t<div class=\"input-group\">\r\n");
      out.write("    \t\t\t<span class=\"input-group-addon\">No Of Stocks</span>\r\n");
      out.write("  \t\t\t\t<input ng-model=\"noStocks\" type=\"text\" class=\"form-control\" name=\"msg\" placeholder=\"Enter the no of Stocks..\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t</br>\r\n");
      out.write("  \t\t\t<p><button type=\"button\" class=\"btn btn-primary\" ng-click=\"addToPortfolio()\">Add To Portfolio</button></p>\r\n");
      out.write("\t\t\t<p>{{validationText2}}</p>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div ng-show=\"cClass == 2\">\r\n");
      out.write("\t\t<p>Portfilio will load here</p>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<table class=\"table table-hover\" id=\"stockTable\">\r\n");
      out.write("\t\t\t<thead>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>Name</th>\r\n");
      out.write("\t\t\t\t\t<th>Symbol</th>\r\n");
      out.write("\t\t\t\t\t<th>Last Traded Price</th>\r\n");
      out.write("\t\t\t\t\t<th></th>\r\n");
      out.write("\t\t\t\t\t<th>Number Of Stocks</th>\r\n");
      out.write("\t\t\t\t\t<th>Total Amount</th>\r\n");
      out.write("\t\t\t\t\t<th></th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</thead>\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("  \t\t\t\t<tr ng-repeat=\"x in stocks\">\r\n");
      out.write("\t\t    \t\t<td>{{ x.name }}</td>\r\n");
      out.write("\t\t    \t\t<td>{{ x.symbol }}</td>\r\n");
      out.write("\t\t    \t\t<td>0</td>\r\n");
      out.write("\t\t    \t\t<td><img  border=\"0\" src=\"");
      out.print(request.getContextPath());
      out.write("/resources/images/Arrow_Up.png\" width=\"30\" height=\"22\"></td>\r\n");
      out.write("\t\t    \t\t<td>{{ x.numberOfStocks }}</td>\r\n");
      out.write("\t\t    \t\t<td>0</td>\r\n");
      out.write("\t\t    \t\t<td><button type=\"button\" class=\"btn btn-primary\" ng-click=\"deleteFromPortfolio(x.symbol)\">Remove from Portfolio</button></td>\r\n");
      out.write(" \t\t\t\t</tr>\r\n");
      out.write(" \t\t\t</tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<input type=\"hidden\" id=\"hdninput\" value=0;>\r\n");
      out.write("<script>\r\n");
      out.write("var count=1;\r\n");
      out.write("var app = angular.module('myApp', []);\r\n");
      out.write("  app.controller('myCtrl', ['$scope','$http', function($scope,$http) {\r\n");
      out.write("    $scope.validationText1 = \"\";\r\n");
      out.write("    $scope.name = \"\";\r\n");
      out.write("    $scope.symbol = \"\";\r\n");
      out.write("    $scope.price = \"\";\r\n");
      out.write("    $scope.noStocks = \"\";\r\n");
      out.write("    $scope.count = 0;\r\n");
      out.write("    $scope.cClass=1;\t\r\n");
      out.write("    \r\n");
      out.write("    $scope.searchSymbol = function() {\r\n");
      out.write("    \t//restful \r\n");
      out.write("    var url = \"https://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20yahoo.finance.quote%20where%20symbol%20in%20(%22\"+$scope.sym+\"%22)&format=json&diagnostics=true&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys&\";\r\n");
      out.write("\t$http.get(url).success(function(response) { //ajax\r\n");
      out.write("\t\r\n");
      out.write("\t\tvar companyName=response.query.results.quote.Name\r\n");
      out.write("\t\tif(companyName!=null){\r\n");
      out.write("\t\t\t$scope.name=response.query.results.quote.Name;\r\n");
      out.write("\t\t\t$scope.symbol=response.query.results.quote.Symbol;\r\n");
      out.write("\t\t\t$scope.price=response.query.results.quote.LastTradePriceOnly;\r\n");
      out.write("\t\t\t$scope.validationText1 = \"\";\r\n");
      out.write("\t\t\t$scope.validationText2 = \"\";\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$scope.validationText1 = \"Enter a valid value\";\r\n");
      out.write("\t\t}\r\n");
      out.write("   });  \r\n");
      out.write("  };\r\n");
      out.write("  \r\n");
      out.write("  $scope.addToPortfolio = function() {\r\n");
      out.write("\t  if($scope.noStocks==\"\"){\r\n");
      out.write("\t\t  $scope.noStocks=0;\r\n");
      out.write("\t  }\r\n");
      out.write("\t  var num = parseInt($scope.noStocks, 10); \r\n");
      out.write("\t  $scope.validationText2 = \"\";\r\n");
      out.write("\t  if(isNaN(num)){\r\n");
      out.write("\t\t  $scope.validationText2 = \"Enter a valid number for number of stocks\";\r\n");
      out.write("\t  }else{\r\n");
      out.write("\t  var url = \"http://localhost:8080/StockWorld/addToPortfolio?name=\"+$scope.name+\"&ltp=\"+$scope.price+\"&symbol=\"+$scope.symbol+ \"&noOfStocks=\"+$scope.noStocks;\r\n");
      out.write("\t\t$http.get(url).success(function(response) {\r\n");
      out.write("\t\t\tvar data=response.inserted;\r\n");
      out.write("\t\t\tif(data=='yes'){\r\n");
      out.write("\t\t\t\talert(\"Data Inserted\");\r\n");
      out.write("\t\t\t}else if(data=='more than 5'){\r\n");
      out.write("\t\t\t\talert(\"You cannot add more than 5 companies\")\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\talert(\"If you want to update, first delete from portfolio and insert again\");\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t   });  \r\n");
      out.write("\t  }\r\n");
      out.write("\t  };\r\n");
      out.write("  $scope.deleteFromPortfolio = function(sym) {\r\n");
      out.write("\t\tvar url = \"http://localhost:8080/StockWorld/deleteFromPortfolio?symbol=\"+sym;\r\n");
      out.write("\t\t\t$http.get(url).success(function(response) {\r\n");
      out.write("\t\t\t\tvar index = -1;\t\t\r\n");
      out.write("\t\t\t\tvar stockArr = eval( $scope.stocks );\r\n");
      out.write("\t\t\t\tfor( var i = 0; i < stockArr.length; i++ ) {\r\n");
      out.write("\t\t\t\t\tif( stockArr[i].symbol === sym ) {\r\n");
      out.write("\t\t\t\t\t\tindex = i;\r\n");
      out.write("\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif( index === -1 ) {\r\n");
      out.write("\t\t\t\t\talert( \"Something gone wrong\" );\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t$scope.stocks.splice( index, 1 );\t\t\r\n");
      out.write("\t\t   });  \r\n");
      out.write("\t\t  };\r\n");
      out.write("  \r\n");
      out.write("  $scope.getPortfolio = function() {\r\n");
      out.write("  \t$scope.cClass=2;\r\n");
      out.write("  \t\tvar url = \"http://localhost:8080/StockWorld/getPortfolio\";\r\n");
      out.write("\t\t\t$http.get(url).success(function(response) {\r\n");
      out.write("\t\t\t\t$scope.stocks=response;\r\n");
      out.write("\t\t\r\n");
      out.write("   });  \r\n");
      out.write("\r\n");
      out.write("\tif(count==1){\r\n");
      out.write("\t\tsetInterval(function(){\r\n");
      out.write("\t\t\t$scope.updateStockPrice();\r\n");
      out.write("\t\t}, 5000);\r\n");
      out.write("\t\tcount=2;\r\n");
      out.write("\t}\r\n");
      out.write("  };\r\n");
      out.write("  \r\n");
      out.write("  $scope.getHome = function(item) {\r\n");
      out.write("  \t$scope.cClass=1;\r\n");
      out.write("  \t$scope.sym=\"\";\r\n");
      out.write("  \t$scope.name = \"\";\r\n");
      out.write("    $scope.symbol = \"\";\r\n");
      out.write("    $scope.price = \"\";\r\n");
      out.write("    $scope.noStocks = \"\";\r\n");
      out.write("  };\r\n");
      out.write("  \r\n");
      out.write("  $scope.updateStockPrice = function(){\r\n");
      out.write("\t  stockArr = eval( $scope.stocks );\r\n");
      out.write("\t\tfor( var i = 0; i < stockArr.length; i++ ) {\r\n");
      out.write("\t\t\tvar url = \"https://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20yahoo.finance.quote%20where%20symbol%20in%20(%22\"+$scope.stocks[i].symbol+\"%22)&format=json&diagnostics=true&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys&\";\r\n");
      out.write("\t\t\t//document.getElementById(\"hdninput\").value=i;\r\n");
      out.write("\t\t\t$http.get(url).success(function(response) {\r\n");
      out.write("\t\t\t\tvar newPrice=response.query.results.quote.LastTradePriceOnly;\r\n");
      out.write("\t\t\t\t//newPrice=newPrice;\r\n");
      out.write("\t\t\t\tvar sym=response.query.results.quote.Symbol;\r\n");
      out.write("\t\t\t\tvar allTR=document.getElementById(\"stockTable\").getElementsByTagName(\"tbody\")[0].getElementsByTagName(\"tr\");\r\n");
      out.write("\t\t\t\tfor(var j=0; j<allTR.length;j++){\r\n");
      out.write("\t\t\t\t\tif(allTR[j].getElementsByTagName(\"td\")[1].innerHTML==sym){\r\n");
      out.write("\t\t\t\t\t\toldPrice=allTR[j].getElementsByTagName(\"td\")[2].innerHTML\r\n");
      out.write("\t\t\t\t\t\tif(oldPrice!=0){\r\n");
      out.write("\t\t\t\t\t\tif(oldPrice>newPrice){\r\n");
      out.write("\t\t\t\t\t\t\tallTR[j].getElementsByTagName(\"td\")[3].getElementsByTagName(\"img\")[0].src=\"/StockWorld/resources/images/Arrow_Down.png\";\r\n");
      out.write("\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\tallTR[j].getElementsByTagName(\"td\")[3].getElementsByTagName(\"img\")[0].src=\"/StockWorld/resources/images/Arrow_Up.png\";\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tallTR[j].getElementsByTagName(\"td\")[2].innerHTML=newPrice;\r\n");
      out.write("\t\t\t\t\t\tvar num=allTR[j].getElementsByTagName(\"td\")[4].innerHTML;\r\n");
      out.write("\t\t\t\t\t\tallTR[j].getElementsByTagName(\"td\")[5].innerHTML=num*newPrice;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("  };\r\n");
      out.write("  \r\n");
      out.write("}]);\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
